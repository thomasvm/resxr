using System;
using System.IO;
using System.Text;
using System.Linq;
using System.Xml.Linq;

namespace Resxr
{
    public class Program
    {
        public static void Main(string[] args)
        {
            if (args.Length != 1)
                throw new NotSupportedException();

            var input = args[0];

            var file = new FileInfo(input);

            var className = Path.GetFileNameWithoutExtension(input);
            var dir = file.Directory.Name;

            var output = GetStronglyTypeCsFileForResx(input, dir, className, "public");

            var designerFilename = $"{className}.Designer.cs";

            var outputPath = Path.Combine(file.Directory.FullName, designerFilename);
            File.WriteAllText(outputPath, output);
        }

        private static string GetStronglyTypeCsFileForResx(string xmlPath, string moduleName, string className, string accessModifier)
        {
            var entries = new StringBuilder();
            XElement root = XElement.Parse(File.ReadAllText(xmlPath));

            var elements = root.Elements("data")
                .ToList()
                .OrderBy(el => el.Attribute("name").Value.Replace(' ', '_'))
                .ToList();

            foreach (var data in elements)
            {
                var valueElement = data.Element("value");   

                var value = PrepareValueComment(valueElement.Value);
                string key = data.Attribute("name").Value;
                string name = data.Attribute("name").Value.Replace(' ', '_').Replace("[", "_").Replace("]", "_");
                entries.AppendFormat(ENTRY, key, name, value, accessModifier);
            }

            var escapedClassName = className.Replace(".", "_");

            string bodyCode = $@"//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace {moduleName} {{
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(""System.Resources.Tools.StronglyTypedResourceBuilder"", ""17.0.0.0"")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class {escapedClassName} {{
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute(""Microsoft.Performance"", ""CA1811:AvoidUncalledPrivateCode"")]
        internal {escapedClassName}() {{
        }}
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {{
            get {{
                if (object.ReferenceEquals(resourceMan, null)) {{
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager(""{moduleName}.{className}"", typeof({escapedClassName}).Assembly);
                    resourceMan = temp;
                }}
                return resourceMan;
            }}
        }}
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {{
            get {{
                return resourceCulture;
            }}
            set {{
                resourceCulture = value;
            }}
        }}
        {entries.ToString().TrimEnd()}
    }}
}}
";

            string resultCode = bodyCode.Replace("\r\n?|\n", "\r\n");
            return resultCode;
        }

        private static string PrepareValueComment(string input)
        {
            const int LIMIT = 500;

            var result = input;

            if (result.Length > LIMIT) {
                result = result.Substring(0, LIMIT) + " [rest of string was truncated]&quot;;";
            }

            return HtmlEscape(result).Replace("\n", "\n        ///");
        }

        private static string HtmlEscape(string input)
        {
            var result = input;

            result = result.Replace("<", "&lt;");
result = result.Replace(">", "&gt;");
result = result.Replace("'", "&apos;");
result = result.Replace("<", "&lt;");
result = result.Replace("\"", "&quot;");
result = result.Replace("& ", "&amp; ");


            return result;
        }

    private static readonly string ENTRY = @"
        /// <summary>
        ///   Looks up a localized string similar to {2}.
        /// </summary>
        {3} static string {1} {{
            get {{
                return ResourceManager.GetString(""{0}"", resourceCulture);
            }}
        }}
        ";
    }
}
